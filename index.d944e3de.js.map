{"mappings":"IAEAA,EAFWC,GAAsBC,SAASC,cAAcF,GCIxD,MAAMG,EAAeJ,EAAE,mBACjBK,EAAoBL,EAAE,wBACtBM,EAAcN,EAAE,iBAChBO,EAAeP,EAAE,kBACjBQ,EAAsBR,EAAE,0BACxBS,EAAeT,EAAE,kBACjBU,EAAqBV,EAAE,wBAgD7B,SAASW,EAAgBC,GACvBN,EAAYO,aAAa,YAAaD,EAAQE,W,CAehD,SAASC,EAAeC,GACtBT,EAAaU,YAAcD,EAAKE,MAChCV,EAAoBW,MAAMC,QAAU,OAClB,MAAdJ,EAAKK,QACPZ,EAAaa,IAAMN,EAAKK,MACxBb,EAAoBW,MAAMC,QAAU,SAEtCV,EAAmBO,YAAcD,EAAKO,W,CApExCnB,EAAaoB,iBAAiB,UAAUC,MAAMC,IAC5CA,EAAEC,iBACF,MACMC,EADW,IAAIC,SAASzB,GACT0B,IAAI,aACzBC,SAASC,KAAO,QAAQC,mBAAmBL,IAAM,IAGnDM,OAAOV,iBAAiB,QAAQC,UAC9B,MACMU,EADS,IAAIC,gBAAgBF,OAAOH,SAASM,QAC3BP,IAAI,OAC5B,GAAgB,MAAZK,EAAkB,CACpB,IAAIP,EACJ,IACEA,EAAM,IAAIU,IAAIH,E,CACd,MAAOI,GAKP,YAJAxB,EAAe,CACbG,MAAO,cACPK,YAAa,6B,CAIjBZ,GAAgB,GAChBN,EAAkBY,YAAcW,EAAII,KACpC,UA0BJP,eAAsCG,GACpC,MAAMZ,QAKRS,eAAgCG,GAC9B,OAAOY,MACL,mCAAmCP,mBAAmBL,EAAII,SAC1DS,MAAKC,GAAYA,EAASC,Q,CARTC,CAAiBhB,GACpC,GAAoB,MAAhBZ,EAAK6B,QAAiB,MAAM,IAAIC,MAAM9B,EAAK6B,SAC/C9B,EAAeC,E,CA5BL+B,CAAuBnB,GAC7BvB,EAAkBY,YAAc,GAChC,MAAM+B,EAAa9C,SAAS+C,cAAc,KAC1CD,EAAWhB,KAAOJ,EAAII,KACtBgB,EAAW/B,YAAcW,EAAII,KAC7B3B,EAAkB6C,YAAYF,E,CAC9B,MAAOG,GACPpC,EAAe,CACbG,MAAO,QACPK,YAAa4B,EAAMN,S,CAEtB,QACClC,GAAgB,E,OAGlBP,EAAae,MAAMC,QAAU,QAC7Bf,EAAkBc,MAAMC,QAAU,OAClCd,EAAYa,MAAMC,QAAU,M","sources":["src/utils/$.ts","src/app.ts"],"sourcesContent":["const $ = (selectors: string) => document.querySelector(selectors)\n\nexport default $\n","import $ from \"./utils/$\"\nimport { PreviewCard } from \"./types\"\n\n//#region HTML elements\nconst urlInputForm = $(\"#url-input-form\") as HTMLFormElement\nconst previewUrlWrapper = $(\"#preview-url-wrapper\") as HTMLAnchorElement\nconst previewCard = $(\"#preview-card\") as HTMLDivElement\nconst previewTitle = $(\"#preview-title\") as HTMLHeadingElement\nconst previewImageWrapper = $(\"#preview-image-wrapper\") as HTMLDivElement\nconst previewImage = $(\"#preview-image\") as HTMLImageElement\nconst previewDescription = $(\"#preview-description\") as HTMLParagraphElement\n//#endregion\n\nurlInputForm.addEventListener(\"submit\", async e => {\n  e.preventDefault()\n  const formData = new FormData(urlInputForm)\n  const url = formData.get(\"url-input\") as string\n  location.href = `?url=${encodeURIComponent(url)}`\n})\n\nwindow.addEventListener(\"load\", async () => {\n  const params = new URLSearchParams(window.location.search)\n  const urlParam = params.get(\"url\")\n  if (urlParam != null) {\n    let url: URL\n    try {\n      url = new URL(urlParam)\n    } catch (error) {\n      setPreviewCard({\n        title: \"Invalid URL\",\n        description: \"Please enter a valid URL.\",\n      })\n      return\n    }\n    setLoadingState(true)\n    previewUrlWrapper.textContent = url.href\n    try {\n      await fetchAndSetPreviewCard(url)\n      previewUrlWrapper.textContent = \"\"\n      const previewUrl = document.createElement(\"a\")\n      previewUrl.href = url.href\n      previewUrl.textContent = url.href\n      previewUrlWrapper.appendChild(previewUrl)\n    } catch (error) {\n      setPreviewCard({\n        title: \"Error\",\n        description: error.message,\n      })\n    } finally {\n      setLoadingState(false)\n    }\n  } else {\n    urlInputForm.style.display = \"block\"\n    previewUrlWrapper.style.display = \"none\"\n    previewCard.style.display = \"none\"\n  }\n})\n\nfunction setLoadingState(loading: boolean) {\n  previewCard.setAttribute(\"aria-busy\", loading.toString())\n}\n\nasync function fetchAndSetPreviewCard(url: URL) {\n  const data = await fetchPreviewCard(url)\n  if (data.message != null) throw new Error(data.message)\n  setPreviewCard(data)\n}\n\nasync function fetchPreviewCard(url: URL): Promise<PreviewCard> {\n  return fetch(\n    `https://embtr.now.sh/scrape?url=${encodeURIComponent(url.href)}`\n  ).then(response => response.json())\n}\n\nfunction setPreviewCard(data: PreviewCard) {\n  previewTitle.textContent = data.title\n  previewImageWrapper.style.display = \"none\"\n  if (data.image != null) {\n    previewImage.src = data.image\n    previewImageWrapper.style.display = \"block\"\n  }\n  previewDescription.textContent = data.description\n}\n"],"names":["$08d6be52f6229db7$export$2e2bcd8739ae039","selectors","document","querySelector","$f43313d21d3fd8e2$var$urlInputForm","$f43313d21d3fd8e2$var$previewUrlWrapper","$f43313d21d3fd8e2$var$previewCard","$f43313d21d3fd8e2$var$previewTitle","$f43313d21d3fd8e2$var$previewImageWrapper","$f43313d21d3fd8e2$var$previewImage","$f43313d21d3fd8e2$var$previewDescription","$f43313d21d3fd8e2$var$setLoadingState","loading","setAttribute","toString","$f43313d21d3fd8e2$var$setPreviewCard","data","textContent","title","style","display","image","src","description","addEventListener","async","e","preventDefault","url","FormData","get","location","href","encodeURIComponent","window","urlParam","URLSearchParams","search","URL","error","fetch","then","response","json","$f43313d21d3fd8e2$var$fetchPreviewCard","message","Error","$f43313d21d3fd8e2$var$fetchAndSetPreviewCard","previewUrl","createElement","appendChild","error1"],"version":3,"file":"index.d944e3de.js.map"}